# 확장성 있는 웹 아키텍처와 분산 시스템


https://d2.naver.com/helloworld/206816
위 글을 읽고 정리한 문서입니다

## 웹 분산 시스템 설계 시의 고려사항

* 가용성
    - 서비스가 중단되지 않고 성능을 유지해야함
* 성능
    - 낮은 latency, 빠른 응답 속도
* 신뢰성
    - 똑같은 요청엔 항상 같은 응답을 줘야함
* 확장성
    - 얼마나 더 많은 부하를 처리할 수 있도록 처리량을 증가시키기 위해 필요한 노력
* 관리성
    - 문제 발생 시 분석하기 용이하고 업데이트, 수정 등이 쉬워야함
* 비용
    - 시스템을 운영하는데 드는 비용(시간, 돈 등)

결정을 내릴 때 트레이트 오프 생각하면서 설계해야함
ex. scale-out하면 성능과 가용성은 좋아지겠지만 비용이 추가되고 관리하긴 어려움

## 기초

### 이미지 호스팅 어플리케이션

#### 서론
* 목표
    - 효율적인 비용과 고가용성을 만족하고 적은 레이턴시를 가지는 아키텍처를 구축하자
* 기능 
    - 이미지 업로드
    - 이미지 조회
* 고려할 부분
    - 저장될 이미지 개수에 제한 없음 -> 저장공간의 확장성 고려해야함
    - 이미지 보기나 다운로드 요청 시 응답 시간이 빨라야함
    - 이미지 업로드 난 후, 해당 이미지는 항상 시스템에 저장돼있어야함 (데이터에 대한 신뢰성)
    - 시스템을 운용하기 쉬워야 함 (관리성)
    - 이미지 호스팅 자체의 이익율이 높지 않으므로 시스템 비용은 효율적으로 운용돼야함

![architecture1](https://d2.naver.com/content/images/2015/06/helloworld-206816-1.jpg)

#### 서비스들

확장성 있는 시스템 설계 시 각각의 명확한 인터페이스 기반으로 기능별로 나눠 생각하는 것이 좋음 (SOA: Service Oriented Architecture)

SOA는 기능별로 서비스를 구성하며 각각의 서비스는 다른 서비스와 상호작용 하기위해 다른 서비스가 공개하는 API 형태인 추상화된 인터페이스를 사용함
    
* 장점
    - 문제를 분리시키는데 
